html {
  max-width: 720px;
}

body {
  background: #fff;
}

/* Глобальний селектор */
* {
  color: red
}

/* Root селектор */
:root {
  background: blue;
}

/* Селектор тегу */
h1 {
  color: green
}

/* Селектор класу - селектор, який надає стилі для всіх тегів,
які мають певний клас, вказаний у селекторі */

.box {
  background: rgb(99, 94, 94);
}

/* Селектор ідентефікатору - селектор, який надає стилі для всіх тегів,
які мають певний ідентефікатор, вказаний у селекторі */

#user {
  color: yellow
}

h1, .box, #user {
  color: green
}

/* Щоб пов'язати клас і тег, ідентефікатор і тег, то потрібно написати:
<tag_name>.<class_name> або <tag_name>#<id_name> */

/* Дочірній селектор - селектор, який надає стилі для тегів,
які є дочірніми до головного тегу */

div > p {
  color: purple
}

p {
  color: palegreen
}

/* Селектор нащадка - селектор, який надає стилі для тегів, 
які є нащадками головного тегу */

/* Вони пишуться:
або
<Main_name> <child1_name> <child2_name> {
/
///
}
або
<main_name> >> <child1_name> >> <child2_name> {
///
} */

section .granny {
  color: blueviolet;
}

/* Сестринський селектор - селектор, який надає стилі для сестринського тегу,
який йде після основного
PS. теги сестринські, якщо розташовані поряд один з одним */

button + p {
  background: #9c3a3a;
}

/* Також є інший селектор, який надає стилі для тегу,
який знаходиться з головним на одному рівні */

h1~p {
  color: rgb(187, 0, 47)
}

/* Селектор першої дитини - селектор, що обирає тег,
якщо він є першою дитиною всередині батьківського тегу */

li.item {
  color: rgb(43, 220, 226)
}

li:first-child {
  color: blue
}
/* Селектор псевдоклас - ключове слово, додане до звичайного селектора,
яку визначає його особливий стан */

/* Селектор останньої дитини - селектор, який вибирає останній тег,
якщо він є останньою дитиною всередині батьківського тегу */

li:last-child {
  color:rgb(99, 94, 94)
}

/* Селектор одиничної дитини - селектор, який вибирає один елемент,
якщо він є єдиною дитиною всередині батьківського тегу */

li:only-child {
  color: #15a160;
}

/* Селектор першого типу - селектор, який вибирає перший елемент
по заданому типу серед своїх сусідських елементів */

div > p {
  color: aquamarine;
}
div > p:first-of-type {
  color: greenyellow
}

/* Так само можна ввести і селектор останнього типу */

div > b:last-of-type {
  background: brown;
}

/* Селектор одиничного типу - це селектор, який вибирає
елемент заданого типу, коли він єдиний серед сусідніх елементів */

div > strong {
  color: black;
}

/* Селектор порядкової дитини - селектор, який обирає елемент на
основі їхньої позиції в батьківському елементі */

div.nth > p:nth-child(2) {
  color: green
}

/* В індекс можна вписувати:
числа (1,2,3),
even (обирає парні елементи)
odd (обирає непарні елементи)
формули (наприклад, 3n+1, тоді елементи будуть обиратися за цією формулою, причому n=0,...,INFINITY) */


/* Також існує селектор зворотної порядкової дитини, який працює 
аналогічно до попереднього, але підрахунок веде з кінця */
p:nth-last-child(3) {
  background: #15a160;
}
/* Аналогічно можна ввести і для типу елементу */

/* 
p:nth-of-type(n) {
  ...
}

p:nth-last-of-type(n) {
  ...
} */


/* Селектор невідповідності - селектор, який обирає елементи,
які не відповідають вказаним селекторам */

div#not p:not(.big) {
  background: red;
}

/* Селектор пустого контенту - селектор, який обирає елементи,
які не мають всередині контенту чи тегів. */

div.empt div:empty {
  height: 10px;
  background: blueviolet;
}

/* Селектор атрибутів - тип селекторів, який дозволяє вибирати елементи
на основі їх атрибутів та їх значень */

/* Селектор назви атрибута - селектор, який вибирає тег, якщо він має
вказаний атрибут */
.input-dark {
  background: #6d6b6b;
}

.input-dark[required] {
  background: red;
}

/* Селектор значення атрибута - селектор, який вибирає тег, якщо він
має вказаний атрибут з вказаним значенням */

.input-dark[type="number"] {
  background: green;
}

/* Селектор наявності значення атрибута - селектор, який вибирає тег, якщо він має
вказаний атрибут, в якому можуьб перебувати декілька значень, одне з яких є вказаним значенням */

.small-img[alt~="expected"] {
  height: 500px;
}

/* Селектор префіксу значення атрибута - селектор, який вибирає тег, якщо він має
вказаний атрибут, значення якого починається з вказаного value або value- */

div[class|="classic"] {
  background: violet;
}

/* Селектор початку значення атрибута - селектор, який вибирає тег, 
якщо він має вказаний атрибут, значення якого починається з вказаного value */

div#poch[class^="classic"] {
  background: goldenrod;
}

/* Селектор кореня значення атрибута - селектор, який вибирає тег,
якщо він має вказаний атрибут, значення якого має корінь з вказаного value */

button[class*="btn"] {
  background: #1e0055;
}

/* Селектор кінцівки значення атрибута - селектор, який вибирає тег,
якщо він має вказаний атрибут, значення якого закінчується з вказаного value */

div[class$="btn"] {
  color: #1e0055;
}

/* Селектор псевдоелементів - тип селекторів,
який дозволяє стилізувати певні частини елементів */

/* Селектор псевдоелемента першої літери - селектор, який задає
стилізацію першої літери елемента */

button.btn::first-letter {
  color: aquamarine;
}

/* Селектор псевдоелемента першого рядка - селектор,
який задає стилізацію першого рядка елементу */

div.advanced::first-line {
  background: gray;
}

/* Селектор псевдоелемента плейсхолдера - селектор, який задає стилізації
для тексту атрибута placeholder тегу input
input::placeholder {
  ...
}
*/

/* Селектор псевдоелемента "попереду" - селектор, який надає можливість вказати контент,
який буде йти попереду основного контенту елемента, та надати йому стилізацію. Для цього
селектора доступна властивість content, в яку ми вказуємо текст для контенту псевдоелемента */

.big-text::before {
  content: '$$$';
  color: goldenrod;
}

/* Селектор псевдоелемента 'після' працює так, як і минулий, але текст після основного контенту */

.big-text::after {
  content: "|||";
  color: goldenrod;
}
